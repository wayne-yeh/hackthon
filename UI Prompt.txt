Create a new Next.js app called "tar-dapp" with TypeScript and TailwindCSS.

Goal:
I want a full working **UI**, not an API test interface.

Requirements:
- Pages:
  - `/` → Landing page: connect imToken wallet via WalletConnect v2 (QR or deep link). Show connected address.
  - `/issuer` → Protected page (simple .env token) with a form to mint a TAR Receipt (fields: ownerAddress, invoiceNo, itemName, amount, image upload). Calls Core API `POST /api/v1/receipts/issue`.
  - `/verify?tokenId=` → Displays receipt verification status (Valid / Invalid / Revoked) and metadata fields from Verification API.
  - `/my` → Lists owned receipts (fetch via `GET /api/v1/receipts/owner/:address`).

- UI Components:
  - `WalletConnectButton`
  - `ReceiptCard`
  - `VerifyBadge`
  - Toast notifications for TX status (Pending / Success / Failed)
  - Show Etherscan / Block Explorer link if `NEXT_PUBLIC_EXPLORER_URL` is defined.

- Styling:
  - Tailwind + shadcn/ui components.
  - Clean card layout.

- Deliverables:
  - hooks/useWalletConnect.ts
  - services/apiClients.ts
  - pages with logic and components
  - Jest + Playwright tests
  - README.md with setup, run, and test instructions

I want a **fully interactive DApp UI**, not an API testing console.
