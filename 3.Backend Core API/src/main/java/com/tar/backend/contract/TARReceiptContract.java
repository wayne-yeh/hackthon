package com.tar.backend.contract;

import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * TAR Receipt Contract Interface
 * Generated from Solidity contract ABI
 */
public class TARReceiptContract extends Contract {

    public static final String BINARY = "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80635c975abb1161010f578063a217fddf116100a2578063d34047b611610071578063d34047b61461045c578063d34b51c51461046f578063d547741f14610482578063e985e9c51461049557600080fd5b8063a217fddf1461041b578063a22cb46514610423578063b88d4fde14610436578063c87b56dd1461044957600080fd5b806382aefa24116100de57806382aefa24146103d15780638456cb59146103f857806391d148541461040057806395d89b411461041357600080fd5b80635c975abb1461037d5780635ccc561e146103885780636352211e146103ab57806370a08231146103be57600080fd5b8063248a9ca3116101875780633f4ba83a116101565780633f4ba83a1461034757806342842e0e1461034f57806356189236146103625780635944c7531461036a57600080fd5b8063248a9ca3146102be5780632a55205a146102ef5780632f2ff15d1461032157806336568abe1461033457600080fd5b8063095ea7b3116101c3578063095ea7b3146102725780631d97ce311461028557806320c5429b1461029857806323b872dd146102ab57600080fd5b806301ffc9a7146101f557806304634d8d1461021d57806306fdde0314610232578063081812fc14610247575b600080fd5b610208610203366004611650565b6104a8565b60405190151581526020015b60405180910390f35b61023061022b3660046116a5565b6104b9565b005b61023a6104d3565b6040516102149190611720565b61025a610255366004611733565b610565565b6040516001600160a01b039091168152602001610214565b61023061028036600461174c565b61058e565b610208610293366004611778565b61059d565b6102306102a6366004611733565b610639565b6102306102b936600461179a565b610760565b6102e16102cc366004611733565b60009081526006602052604090206001015490565b604051908152602001610214565b6103026102fd366004611778565b6107eb565b604080516001600160a01b039093168352602083019190915201610214565b61023061032f3660046117db565b610870565b6102306103423660046117db565b610895565b6102306108c8565b61023061035d36600461179a565b6108de565b600a546102e1565b61023061037836600461180b565b6108f9565b60095460ff16610208565b610208610396366004611733565b6000908152600c602052604090205460ff1690565b61025a6103b9366004611733565b61090f565b6102e16103cc366004611849565b61091a565b6102e17f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12281565b610230610962565b61020861040e3660046117db565b610975565b61023a6109a0565b6102e1600081565b610230610431366004611866565b6109af565b610230610444366004611925565b6109ba565b61023a610457366004611733565b6109d2565b61023061046a3660046119a5565b610a7c565b6102e161047d366004611733565b610b8a565b6102306104903660046117db565b610c19565b6102086104a3366004611a12565b610c3e565b60006104b382610c6c565b92915050565b60006104c481610c91565b6104ce8383610c9b565b505050565b6060600080546104e290611a40565b80601f016020809104026020016040519081016040528092919081815260200182805461050e90611a40565b801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b5050505050905090565b600061057082610d3e565b506000828152600460205260409020546001600160a01b03166104b3565b610599828233610d77565b5050565b6040516331a9108f60e11b8152600481018390526000903090636352211e90602401602060405180830381865afa9250505080156105f8575060408051601f3d908101601f191682019092526105f591810190611a7a565b60015b610604575060006104b3565b506000838152600c602052604090205460ff1615610624575060006104b3565b506000918252600b6020526040909120541490565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12261066381610c91565b61066b610d84565b6040516331a9108f60e11b8152600481018390523090636352211e90602401602060405180830381865afa9250505080156106c3575060408051601f3d908101601f191682019092526106c091810190611a7a565b60015b6106e85760405163dd1d49eb60e01b8152600481018390526024015b60405180910390fd5b506000828152600c602052604090205460ff161561071c57604051632606b1dd60e01b8152600481018390526024016106df565b6000828152600c6020526040808220805460ff191660011790555183917f61e27b0bfd8e18e6b92ec32ce1c28bb698d27bfe93e84c7e94d4db0a3135c76091a25050565b6001600160a01b03821661078a57604051633250574960e11b8152600060048201526024016106df565b6000610797838333610daa565b9050836001600160a01b0316816001600160a01b0316146107e5576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016106df565b50505050565b600082815260086020526040812080548291906001600160a01b03811690600160a01b90046001600160601b03168161083f5750506007546001600160a01b03811690600160a01b90046001600160601b03165b60006127106108576001600160601b03841689611aad565b6108619190611ac4565b92989297509195505050505050565b60008281526006602052604090206001015461088b81610c91565b6107e58383610df0565b6001600160a01b03811633146108be5760405163334bd91960e11b815260040160405180910390fd5b6104ce8282610e84565b60006108d381610c91565b6108db610ef1565b50565b6104ce838383604051806020016040528060008152506109ba565b600061090481610c91565b6107e5848484610f43565b60006104b382610d3e565b60006001600160a01b038216610946576040516322718ad960e21b8152600060048201526024016106df565b506001600160a01b031660009081526003602052604090205490565b600061096d81610c91565b6108db611005565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600180546104e290611a40565b610599338383611042565b6109c5848484610760565b6107e533858585856110e1565b60606109dd82610d3e565b506000828152600d6020526040902080546109f790611a40565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2390611a40565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b50505050509050919050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122610aa681610c91565b610aae610d84565b6001600160a01b038416610ae057604051630bc2c5df60e11b81526001600160a01b03851660048201526024016106df565b8251600003610b045782604051639bc1a52f60e01b81526004016106df9190611720565b600a80549081906000610b1683611ae6565b9190505550610b25858261120c565b6000818152600d60205260409020610b3d8582611b45565b506000818152600b60205260408082208590555184916001600160a01b0388169184917f735d687607ce9e35b73121f5b238c4cd2854db103741adba51d670bb706051cc91a45050505050565b6040516331a9108f60e11b8152600481018290526000903090636352211e90602401602060405180830381865afa925050508015610be5575060408051601f3d908101601f19168201909252610be291810190611a7a565b60015b610c055760405163dd1d49eb60e01b8152600481018390526024016106df565b50506000908152600b602052604090205490565b600082815260066020526040902060010154610c3481610c91565b6107e58383610e84565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663152a902d60e11b14806104b357506104b382611226565b6108db813361124b565b6127106001600160601b038216811015610cda57604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016106df565b6001600160a01b038316610d0457604051635b6cc80560e11b8152600060048201526024016106df565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600755565b6000818152600260205260408120546001600160a01b0316806104b357604051637e27328960e01b8152600481018490526024016106df565b6104ce8383836001611284565b60095460ff1615610da85760405163d93c066560e01b815260040160405180910390fd5b565b6000828152600c602052604081205460ff1615610ddd5760405163dd1d49eb60e01b8152600481018490526024016106df565b610de884848461138a565b949350505050565b6000610dfc8383610975565b610e7c5760008381526006602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610e343390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104b3565b5060006104b3565b6000610e908383610975565b15610e7c5760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104b3565b610ef9611483565b6009805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6127106001600160601b038216811015610f895760405163dfd1fc1b60e01b8152600481018590526001600160601b0383166024820152604481018290526064016106df565b6001600160a01b038316610fba57604051634b4f842960e11b815260048101859052600060248201526044016106df565b506040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600890529190942093519051909116600160a01b029116179055565b61100d610d84565b6009805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f263390565b6001600160a01b03821661107457604051630b61174360e31b81526001600160a01b03831660048201526024016106df565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561120557604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611123908890889087908790600401611c05565b6020604051808303816000875af192505050801561115e575060408051601f3d908101601f1916820190925261115b91810190611c42565b60015b6111c7573d80801561118c576040519150601f19603f3d011682016040523d82523d6000602084013e611191565b606091505b5080516000036111bf57604051633250574960e11b81526001600160a01b03851660048201526024016106df565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461120357604051633250574960e11b81526001600160a01b03851660048201526024016106df565b505b5050505050565b6105998282604051806020016040528060008152506114a6565b60006001600160e01b03198216637965db0b60e01b14806104b357506104b3826114be565b6112558282610975565b6105995760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106df565b808061129857506001600160a01b03821615155b1561135a5760006112a884610d3e565b90506001600160a01b038316158015906112d45750826001600160a01b0316816001600160a01b031614155b80156112e757506112e58184610c3e565b155b156113105760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016106df565b81156113585783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b03908116908316156113b7576113b781848661150e565b6001600160a01b038116156113f5576113d4600085600080611284565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611424576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b60095460ff16610da857604051638dfc202b60e01b815260040160405180910390fd5b6114b08383611572565b6104ce3360008585856110e1565b60006001600160e01b031982166380ac58cd60e01b14806114ef57506001600160e01b03198216635b5e139f60e01b145b806104b357506301ffc9a760e01b6001600160e01b03198316146104b3565b6115198383836115d7565b6104ce576001600160a01b03831661154757604051637e27328960e01b8152600481018290526024016106df565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016106df565b6001600160a01b03821661159c57604051633250574960e11b8152600060048201526024016106df565b60006115aa83836000610daa565b90506001600160a01b038116156104ce576040516339e3563760e11b8152600060048201526024016106df565b60006001600160a01b03831615801590610de85750826001600160a01b0316846001600160a01b0316148061161157506116118484610c3e565b80610de85750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146108db57600080fd5b60006020828403121561166257600080fd5b813561166d8161163a565b9392505050565b6001600160a01b03811681146108db57600080fd5b80356001600160601b03811681146116a057600080fd5b919050565b600080604083850312156116b857600080fd5b82356116c381611674565b91506116d160208401611689565b90509250929050565b6000815180845260005b81811015611700576020818501810151868301820152016116e4565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061166d60208301846116da565b60006020828403121561174557600080fd5b5035919050565b6000806040838503121561175f57600080fd5b823561176a81611674565b946020939093013593505050565b6000806040838503121561178b57600080fd5b50508035926020909101359150565b6000806000606084860312156117af57600080fd5b83356117ba81611674565b925060208401356117ca81611674565b929592945050506040919091013590565b600080604083850312156117ee57600080fd5b82359150602083013561180081611674565b809150509250929050565b60008060006060848603121561182057600080fd5b83359250602084013561183281611674565b915061184060408501611689565b90509250925092565b60006020828403121561185b57600080fd5b813561166d81611674565b6000806040838503121561187957600080fd5b823561188481611674565b91506020830135801515811461180057600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156118ca576118ca611899565b604051601f8501601f19908116603f011681019082821181831017156118f2576118f2611899565b8160405280935085815286868601111561190b57600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561193b57600080fd5b843561194681611674565b9350602085013561195681611674565b925060408501359150606085013567ffffffffffffffff81111561197957600080fd5b8501601f8101871361198a57600080fd5b611999878235602084016118af565b91505092959194509250565b6000806000606084860312156119ba57600080fd5b83356119c581611674565b9250602084013567ffffffffffffffff8111156119e157600080fd5b8401601f810186136119f257600080fd5b611a01868235602084016118af565b925050604084013590509250925092565b60008060408385031215611a2557600080fd5b8235611a3081611674565b9150602083013561180081611674565b600181811c90821680611a5457607f821691505b602082108103611a7457634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a8c57600080fd5b815161166d81611674565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104b3576104b3611a97565b600082611ae157634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611af857611af8611a97565b5060010190565b601f8211156104ce57600081815260208120601f850160051c81016020861015611b265750805b601f850160051c820191505b8181101561120357828155600101611b32565b815167ffffffffffffffff811115611b5f57611b5f611899565b611b7381611b6d8454611a40565b84611aff565b602080601f831160018114611ba85760008415611b905750858301515b600019600386901b1c1916600185901b178555611203565b600085815260208120601f198616915b82811015611bd757888601518255948401946001909101908401611bb8565b5085821015611bf55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c38908301846116da565b9695505050505050565b600060208284031215611c5457600080fd5b815161166d8161163a56fea264697066735822122006d747db2f6edfdf8cd8a92f649f33bb8d62a551b45726629262851483bd9bcb64736f6c63430008140033";

    public static final String FUNC_MINT = "mint";
    public static final String FUNC_REVOKE = "revoke";
    public static final String FUNC_OWNEROF = "ownerOf";
    public static final String FUNC_GETMETAHASH = "getMetaHash";
    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    @Deprecated
    protected TARReceiptContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice,
            BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TARReceiptContract(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected TARReceiptContract(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static TARReceiptContract load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new TARReceiptContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TARReceiptContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return new TARReceiptContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    /**
     * Mint a new token
     */
    public RemoteFunctionCall<TransactionReceipt> mint(String to, String tokenUri, byte[] metaHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINT,
                Arrays.asList(new org.web3j.abi.datatypes.Address(160, to),
                        new org.web3j.abi.datatypes.Utf8String(tokenUri),
                        new org.web3j.abi.datatypes.generated.Bytes32(metaHash)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    /**
     * Revoke a token
     */
    public RemoteFunctionCall<TransactionReceipt> revoke(BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKE,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    /**
     * Get owner of a token
     */
    public RemoteFunctionCall<String> ownerOf(BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_OWNEROF,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Arrays.asList(new org.web3j.abi.TypeReference<org.web3j.abi.datatypes.Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    /**
     * Get metadata hash of a token
     */
    public RemoteFunctionCall<byte[]> getMetaHash(BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETMETAHASH,
                Arrays.asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Arrays.asList(new org.web3j.abi.TypeReference<org.web3j.abi.datatypes.generated.Bytes32>() {
                }));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    /**
     * Get total supply
     */
    public RemoteFunctionCall<BigInteger> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOTALSUPPLY,
                Collections.emptyList(),
                Arrays.asList(new org.web3j.abi.TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }
}
